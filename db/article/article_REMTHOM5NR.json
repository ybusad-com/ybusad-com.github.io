{"code":0,"msg":"ok","data":{"article":{"authorCode":"admin","authorName":"孙天骁","classify":"技术类","content":"<p style=\"text-indent: 2em;\">\n    去年年末，我完成了伟大的天骁随记Android客户端V6.0，而今天我给它带来了新的升级——6.1\n</p>\n<p style=\"text-indent: 2em;\">\n    这次更新，我加入了三个主要功能。1.随记配图。2.智能地点推荐。3.随记评论。<br/>\n</p>\n<p style=\"text-indent: 2em;\">\n    先说随记配图功能，根据我以前就想好的设计，编辑随记时可以拍摄并插入至多2张照片，他们会被压缩到一个合适的大小，上传服务器保存，跟随随记展示。\n</p>\n<p style=\"text-indent: 2em;\">\n    我使用了三年多的随记系统只能是纯文字的（最多带上emoji表情），那么允许配图了之后会变成什么样子，变成另一种形式的朋友圈或微博？<br/>\n</p>\n<p style=\"text-indent: 2em;\">\n    不。随记仍然和他们有显著区别。随记可以插入的图片只能是和内容一样具有即时性的相片，而且会被以一种较小的尺寸展示，确保它只起到基本的“为文字说明”的作用，而绝对不是破坏了随记系统设立的初衷。\n</p>\n<p style=\"text-indent: 2em;\">\n    实际上随记配图的创意，我在2013年12月的某一天就有过。那个时候我发过一条随记，这条随记被我认为是非常需要插图说明问题的，是两张王芳和宋世鑫的合影的照片。<br/>\n</p>\n<div id=\"e\" style=\"padding: 5px 10px 10px 2em\"></div><script>xzw.loadModule('essaytalker')</script><script>$(function(){$('#e').essaytalker({essayIdList:[2965],allowLoadMore:false});});</script>\n<p style=\"text-indent: 2em;\">\n    甚至我对当时网站的随记系统专门进行了处理，在这条随记下贴出两张照片。我当时就觉得，有适当规格的照片配合的随记一定会是一个好的创意。<br/>\n</p>\n<p style=\"text-indent: 2em;\">\n    在开发6.0的时候，我就为未来加入插图功能做了结构上的准备。我觉得时机终于成熟了，所以我在6.1加上了。\n</p>\n<p style=\"text-indent: 2em;\">\n    鉴于最新的考虑，随记配图只能现拍。所以我需要给我的客户端以拍照的权限。在AndroidManifest.xml上添加权限：<br/>\n</p>\n<pre class=\"brush:xml;toolbar:false\">&lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt;</pre>\n<p style=\"text-indent: 2em;\">\n    为了可以正常保存照片，还需要给读写手机存储的权限：\n</p>\n<pre class=\"brush:xml;toolbar:false\">&lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /&gt;</pre>\n<p style=\"text-indent: 2em;\">\n    这些还不够，天骁随记客户端是在API Level 23下编译的，需要动态申请启动相机的权限：\n</p>\n<pre class=\"brush:java;toolbar:false\">if(checkSelfPermission(Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED){\n    requestPermissions(new String[]{Manifest.permission.CAMERA}, 1);\n}</pre>\n<p style=\"text-indent: 2em;\">\n    在Android6.0以上的手机上会弹出提示框，提示用户是否授予拍照/录像权限。这个表达式可以判断用户有没有给权限：<br/>\n</p>\n<pre class=\"brush:java;toolbar:false\">ActivityCompat.checkSelfPermission(this, Manifest.permission.CAMERA) == PackageManager.PERMISSION_GRANTED</pre>\n<p style=\"text-indent: 2em;\">\n    this是指当前Context，这里是当前Activity。\n</p>\n<p style=\"text-indent: 2em;\">\n    调用相机之前，先为相片生成一个合适的文件名，存储在photoPathName变量里。而照片存放的路径要放在photoDirectory变量里，还需要设置一个名为photoPath的全局变量，包含了完整文件路径。\n</p>\n<p style=\"text-indent: 2em;\">\n    调用相机的代码如下：\n</p>\n<pre class=\"brush:java;toolbar:false\">File photoFile = new File(photoDirectory, photoPathName);\nphotoPath = photoDirectory + photoPathName;\nIntent cameraIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\ncameraIntent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(photoFile));\nstartActivityForResult(cameraIntent, MessageType.TAKE_PHOTO); // 111 - TAKE_PHOTO</pre>\n<p style=\"text-indent: 2em;\">\n    我在这里定义了一个叫做MessageType.TAKE_PHOTO的常量，用来标记一个状态码，待会从相机返回我随记主界面的时候会携带状态码把拍摄结果传回来。\n</p>\n<p style=\"text-indent: 2em;\">\n    在onActivityResult事件里，检测到照片拍摄完毕，就从photoPath拿到照片的Bitmap，并进行压缩：<br/>\n</p>\n<pre class=\"brush:java;toolbar:false\">public static Bitmap getSmallBitmap(String filePath, int size) {\n    final BitmapFactory.Options options = new BitmapFactory.Options();\n    options.inJustDecodeBounds = true;\n    BitmapFactory.decodeFile(filePath, options);\n    // Calculate inSampleSize\n    options.inSampleSize = calculateInSampleSize(options, size, size);\n\n    // Decode bitmap with inSampleSize set\n    options.inJustDecodeBounds = false;\n\n    return BitmapFactory.decodeFile(filePath, options);\n}\n    \npublic static int calculateInSampleSize(BitmapFactory.Options options,\n                                        int reqWidth, int reqHeight) {\n    final int height = options.outHeight;\n    final int width = options.outWidth;\n    int inSampleSize = 1;\n\n    if (height &gt; reqHeight || width &gt; reqWidth) {\n        final int heightRatio = Math.round((float) height\n                / (float) reqHeight);\n        final int widthRatio = Math.round((float) width / (float) reqWidth);\n        inSampleSize = heightRatio &lt; widthRatio ? heightRatio : widthRatio;\n    }\n    return inSampleSize;\n}</pre>\n<p style=\"text-indent: 2em;\">\n    为了方便图片传输，将bitmap转为base64编码，和其他随记信息放在一起：\n</p>\n<pre class=\"brush:java;toolbar:false\">public static String bitmapToBase64(Bitmap bitmap) {\n\n    String result = null;\n    ByteArrayOutputStream baos = null;\n    try {\n        if (bitmap != null) {\n            baos = new ByteArrayOutputStream();\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 80, baos);\n            baos.flush();\n            baos.close();\n            byte[] bitmapBytes = baos.toByteArray();\n            result = Base64.encodeToString(bitmapBytes, Base64.DEFAULT);\n        }\n    } catch (Exception e) {\n        e.printStackTrace();\n    } finally {\n        try {\n            if (baos != null) {\n                baos.flush();\n                baos.close();\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n    return result;\n}</pre>\n<p style=\"text-indent: 2em;\">\n    还有配套的Base64ToBitmap函数，在界面上展示缩略图时可能要用到：<br/>\n</p>\n<pre class=\"brush:java;toolbar:false\">public static Bitmap base64ToBitmap(String base64Data) {\n    byte[] bytes = Base64.decode(base64Data, Base64.DEFAULT);\n    return BitmapFactory.decodeByteArray(bytes, 0, bytes.length);\n}</pre>\n<p style=\"text-indent: 2em;\">\n    在服务端，只需要调用php自带的base64_decode函数，就可以还原成正常的jpeg格式图片，服务端给图片生成一个key，把图片发送到七牛云存储，保存key。<br/>\n</p>\n<p style=\"text-indent: 2em;\">\n    接下来。就只需要考虑怎样合适的展示了。\n</p>\n<p style=\"text-indent: 2em;\">\n    <br/>\n</p>\n<p style=\"text-indent: 2em;\">\n    再说说另一个功能，智能地点推荐。\n</p>\n<p style=\"text-indent: 2em;\">\n    这个主要是服务端实现的，基本思路是客户端把当前GPS位置传到服务端，服务端查找在以往发表的随记中，GPS位置和它最接近的，然后返回该随记携带的地点信息。\n</p>\n<p style=\"text-indent: 2em;\">\n    虽然这个是最基本的思路，但是为了准确性和可靠性着想，服务端在未来还要加入大量的逻辑来使得推荐更科学。\n</p>\n<p style=\"text-indent: 2em;\">\n    客户端实现方面，最烦人的地方就在于到底什么时候要启动这个推荐，才可以最优雅和代价最小。这个我思考和尝试了很久。现在我的解决方案是随记未开始撰写但又取了GPS坐标的时候，进入随记撰写页面，地点推荐程序就会开启，把推荐结果填进当前地点。在天骁随记客户端本身的UI设计上，这个过程不会显得突兀。\n</p>\n<p style=\"text-indent: 2em;\">\n    还有一个需要关注的地方就是推荐的最大范围，服务端有一个校验当前坐标和寻找到最接近坐标距离（米为单位）的程序，超过规定距离就不会进行推荐。\n</p>\n<pre class=\"brush:php;toolbar:false\">   function getDistance($lng1, $lat1, $lng2, $lat2){  \n     $earthRadius = 6367000;\n     $lat1 = ($lat1 * pi()) / 180;  \n     $lng1 = ($lng1 * pi()) / 180;  \n   \n     $lat2 = ($lat2 * pi()) / 180;  \n     $lng2 = ($lng2 * pi()) / 180;\n     \n     $calcLongitude = $lng2 - $lng1;  \n     $calcLatitude = $lat2 - $lat1;  \n     $stepOne = pow(sin($calcLatitude / 2), 2) + cos($lat1) * cos($lat2) * pow(sin($calcLongitude / 2), 2);    \n     $stepTwo = 2 * asin(min(1, sqrt($stepOne)));  \n     $calculatedDistance = $earthRadius * $stepTwo;  \n   \n     return round($calculatedDistance);  \n   }</pre>\n<p style=\"text-indent: 2em;\">\n    为了灵活性考虑，我在随记客户端设置上加了推荐范围的选项，有50m、500m、5000米三档。\n</p>\n<p style=\"text-indent: 2em;\">\n    最后放几张相关的图吧。\n</p>\n<p style=\"text-indent: 2em;\">\n    <img src=\"/article%2F14904577454.png\" title=\"article/1490457581.png\" alt=\"blob.png\"/>\n</p>\n<p style=\"text-indent: 2em;\">\n    <img src=\"/article%2F14904577463.png\" title=\"article/1490457612.png\" alt=\"blob.png\"/>\n</p>\n<p style=\"text-indent: 2em;\">\n    拍摄之后的照片缩略图会显示在左下角空白的地方，就不上图了哈。下面是扩充后的设置和权限列表：\n</p>\n<p style=\"text-indent: 2em;\">\n    <img src=\"/article%2F1490457745.png\" title=\"article/1490457745.png\" alt=\"blob.png\"/>\n</p>\n<p style=\"text-indent: 2em;\">\n    <img src=\"/article%2F149045774710.png\" title=\"article/1490457729.png\" alt=\"blob.png\"/>\n</p>\n<p style=\"text-indent: 2em;\">\n    <br/>\n</p>\n<p style=\"text-indent: 2em;\">\n    晚安喽。\n</p>","createTime":"2017-03-26 00:04:24","customCoverKey":"","id":183,"isGood":true,"isTop":false,"publicState":0,"replyCount":0,"state":0,"tags":["随记系统","随记","随记客户端","安卓开发"],"title":"聊一聊天骁随记Android客户端V6.1","urlCode":"REMTHOM5NR","viewCount":750,"viewGroup":-1,"authPassed":true},"author":{"exists":true,"name":"孙天骁","code":"admin","alias":"stx","description":"一个内心丰富的人","homepageUrl":"/u/stx","group":5,"groupName":"站长","isLocked":false,"gender":1,"avatarUrl":"/s/user/FufL-vSFO5eM1we1mxdfYHKH9tfK.jpg","realName":"孙天骁","refBaike":"","isManager":true,"isMe":true,"isLover":false,"introduction":"","joinTime":"2015-02-11 21:45:00"}}}