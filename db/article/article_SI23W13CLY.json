{"code":0,"msg":"ok","data":{"article":{"authorCode":"admin","authorName":"孙天骁","classify":"技术类","content":"<p style=\"text-indent: 2em;\">今天我就来说一说PHP操作文件和数据库的一些基本知识和函数。<br/></p><p style=\"text-indent: 2em;\">先来谈操作文件。首先要说明，PHP提供了三个非常强大的函数用来读取或写入文件。足以满足一般的文件读写功能。</p><p style=\"text-indent: 2em;\">我并不希望在这里详细讲解函数的用法，我只是为初学者提供一个学习的方向和分享一下有关经验，有关函数的具体用法，请自行查阅PHP手册。</p><p style=\"text-indent: 2em;\"><strong>（1）file_get_contents函数</strong></p><p style=\"text-indent: 2em;\">最少只需提供一个文件路径的参数，它就会返回这个文件的所有内容。而且，这个文件不一定在本地，甚至可以在远程可以通过URL访问！该函数会自动下载这个文件。（其实给予PHP函数访问远程文件的能力需要在php.ini里给予权限，但是该权限是默认给予的）。其他的可选参数用于提供读取偏移量和最大读取字符数量等。</p><p style=\"text-indent: 2em;\">成功时返回文件内容，失败时返回false。有些写php的人喜欢用一种代码格式来处理像这样成功时返回资源失败时返回false的函数：<br/></p><pre class=\"brush:php;toolbar:false\">$content&nbsp;=&nbsp;file_get_contents(&quot;./test.txt&quot;)&nbsp;or&nbsp;die(&quot;文件读取失败！&quot;);</pre><p style=\"text-indent: 2em;\">所以如果该函数的返回值不松散等价于false的话，or后面的代码就不会执行。die语法结构的作用是<strong>输出一段文字并立刻终止程序</strong>。如果不想输出任何东西的话就直接写die;也不要写括号。这样写还有一个缺点，就是如果读取到的数据是字符串“0”的话也会终止程序。如果不希望这件事情发生，可以不用这种格式而是在下面写其他的判断代码。所以这种格式更适合于成功时返回资源（resource）类型的函数，如下文提到的fopen函数。</p><p style=\"text-indent: 2em;\"><strong>（2）file_put_contents函数</strong></p><p style=\"text-indent: 2em;\">就是把数据写入文件的函数喽。当然不能往远程文件写数据- -默认会覆盖已经存在的文件。成功时返回写入的数据字节数，失败时返回false。</p><p style=\"text-indent: 2em;\"><strong>（3）file函数</strong></p><p style=\"text-indent: 2em;\">把整个文件读入一个数组，一行一个元素。</p><p style=\"text-indent: 2em;\"><br/></p><p style=\"text-indent: 2em;\">下面介绍一些其他常用的文件操作方法和函数。</p><p style=\"text-indent: 2em;\"><strong>（1）fopen函数</strong></p><p style=\"text-indent: 2em;\">取得文件资源句柄，和c语言库函数的fopen函数基本一样- -第一个参数接受文件路径，第二个参数接收模式，比如w+是读写覆盖模式。</p><p style=\"text-indent: 2em;\">成功会返回一个资源。到不用的时候记得用<strong>fclose函数</strong>关闭资源。</p><p style=\"text-indent: 2em;\">资源未关闭时，就可以用php提供的文件读写函数进行细致的读写操作了，比如<strong>fread函数</strong>读取任意字长数据，<strong>fwrite函数</strong>用来把数据写到当前指针所在的地方。读写文件时有个指针的概念，就是当前的光标。<strong>ftell函数</strong>可以告诉你当前指针的位置，<strong>fseek函数</strong>可以让你随意移动指针，<strong>feof函数</strong>判断指针是否在文件末尾，<strong>rewind函数</strong>可以重置文件指针。PHP还提供了一些实用的函数比如<strong>fgets函数</strong>读取一行出来，<strong>fgetss函数</strong>在读取一行出来的同时删掉里面的html和php标记，类似于用<strong>strip_tags函数</strong>过滤了一下标签。PS：我从来没用过这些文件操作函数。</p><p style=\"text-indent: 2em;\"><strong>（2）文件/文件夹操作函数</strong></p><p style=\"text-indent: 2em;\"><strong>unlink函数</strong>用于删除文件，<strong>copy函数</strong>用于复制文件，<strong>rename函数</strong>用于移动文件（也可以用来重命名文件），<strong>file_exists函数</strong>判断文件是否存在，<strong>mkdir函数</strong>用于新建文件夹，<strong>rmdir函数</strong>用于删除一个空文件夹。<strong>scandir函数</strong>用于返回目录中文件和子目录文件名所构成的数组，写目录路径时不需要写后面的斜线比如scandir(&#39;D:&#39;);注意取得的数组里“.”代表当前目录，“..”代表父目录，你可以print_r一下看看效果。<strong>basename函数</strong>可以从文件路径中提取文件名。还有很多我也说不完了。建议用的时候多从php手册和网上查查资料，包括读取文件属性等等...</p><hr/><p style=\"text-indent: 2em;\">来吧，咱快速地说一下如何用php操作数据库。</p><p style=\"text-indent: 2em;\">与php最搭配的数据库是mysql数据库，php提供了mysql系列函数（过程式操作）和mysqli系列函数（对象式操作）。另外还可以用pdo的方式操作多种数据库。数据库操作比较博大精深，我只简单说一些mysql系列函数。我操作数据库原先一般都是用mysql系列函数，现在我用一个medoo库来操作数据库，是利用pdo方式。</p><p style=\"text-indent: 2em;\">你需要会一些sql语句，用phpmyadmin来管理数据库。</p><p style=\"text-indent: 2em;\">mysql_connect函数用于连接数据库，你需要提供mysql服务器的地址，用户名，密码。默认的地址是localhost:3306，用户名密码默认在php.ini里设定。没有设定的话，用户名为当前用户的用户名，密码为空。</p><p style=\"text-indent: 2em;\">成功的话返回一个资源句柄，失败时返回false。</p><p style=\"text-indent: 2em;\">注意这个资源句柄不用非得保存在一个变量里。因为下文的函数在没有指定资源句柄的情况下都会默认寻找当前已经打开的数据库连接资源句柄。</p><p style=\"text-indent: 2em;\">如果用相同的参数给mysql_connect函数想开一个相同的数据库连接的话，默认会返回已经开好的这个连接句柄。</p><p style=\"text-indent: 2em;\">mysql_select_db函数指定当前数据库。这个是必须要执行的。</p><p style=\"text-indent: 2em;\">mysql_query用来递交一条sql请求。返回值类型根据sql语句类型的不同就会有所不同。比如select查询成功时会返回资源，update和insert、delete等成功时会返回true。</p><p style=\"text-indent: 2em;\">mysql_num_rows返回上面select语句取得的结果集中包含多少条数据。</p><p style=\"text-indent: 2em;\">mysql_fetch_array函数和mysql_fetch_object函数可以把当前一行的数据用数组/对象的形式返回来，到末尾了就返回false。示例：</p><pre class=\"brush:php;toolbar:false\">mysql_connect();\nmysql_select_db(&#39;mydatabase&#39;);\n$r&nbsp;=&nbsp;mysql_query(&quot;select&nbsp;*&nbsp;from&nbsp;mytable&quot;);\nwhile(false&nbsp;!==&nbsp;($q&nbsp;=&nbsp;mysql_fetch_array($r))){\n&nbsp;&nbsp;echo&nbsp;$q[&#39;abc&#39;].&quot;&lt;br&gt;&quot;;&nbsp;//也可以使用该列的序号如$q[0]\n}</pre><p style=\"text-indent: 2em;\"><span class=\"refname\">mysql_affected_rows函数返回上一条sql操作所影响的行数。</span></p><p style=\"text-indent: 2em;\"><span class=\"refname\">mysql_escape_string/mysql_real_escape_string函数，这两个函数很重要，区别是前者可以在任何地方调用，后者需要考虑当前连接的字符集，只能在数据库连接已经打开之后才可以用。推荐使用后者，用于防止sql注入。用于将字符串进行转义，比如单引号“&#39;”变成字面形式的“\\&#39;”，然后你就可以把字符串插入sql语句好往数据库里添加记录。</span></p><pre class=\"brush:php;toolbar:false\">$s&nbsp;=&nbsp;$_POST[&#39;value&#39;];&nbsp;//从外部环境获取数据\n$s&nbsp;=&nbsp;mysql_real_escape_string($s);&nbsp;//假设我们已经打开了数据库连接\n$sql&nbsp;=&nbsp;&quot;INSERT&nbsp;INTO&nbsp;mytable(Content)&nbsp;VALUES(&#39;$s&#39;)&quot;;\nmysql_query($sql);</pre><p style=\"text-indent: 2em;\">mysql_error()函数会返回mysql服务器返回的上一条错误信息。如果需要在数据库操作失败后输出错误信息，可以echo mysql_error();这个很好用。</p><p style=\"text-indent: 2em;\">mysql_close()函数可以关闭当前数据库连接。但是你通常不需要写这个函数，那么php会在脚本结束的时候自动关闭数据库连接。</p><p style=\"text-indent: 2em;\"><br/></p><p style=\"text-indent: 2em;\">今天先说到这里吧。知识点很杂，总结起来累死我了- -后面还有php面向对象和错误处理没有说，还是需要加倍努力啊。</p>","createTime":"2015-10-27 18:48:34","customCoverKey":"","id":94,"isGood":true,"isTop":false,"publicState":0,"replyCount":2,"state":0,"tags":["php","教程"],"title":"PHP入门（4）PHP基本语法之文件和数据库","urlCode":"SI23W13CLY","viewCount":747,"viewGroup":-1,"authPassed":true},"author":{"exists":true,"name":"孙天骁","code":"admin","alias":"stx","description":"一个内心丰富的人","homepageUrl":"/u/stx","group":5,"groupName":"站长","isLocked":false,"gender":1,"avatarUrl":"/s/user/FufL-vSFO5eM1we1mxdfYHKH9tfK.jpg","realName":"孙天骁","refBaike":"","isManager":true,"isMe":true,"isLover":false,"introduction":"","joinTime":"2015-02-11 21:45:00"}}}