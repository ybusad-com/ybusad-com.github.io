{"code":0,"msg":"ok","data":{"list":[{"barName":"骁","content":"5.fill函数（ES6）：将用一个固定值替换数组内的所有元素。","createTime":"2019-05-09 10:06:07","floor":5,"id":8635,"isMainBar":true,"pid":8635,"threadId":2966,"tid":2966,"title":"JavaScript Array对象的常用方法","type":"post"},{"barName":"骁","content":"4.every函数（ES6）：检测数组内的所有元素是否都符合指定条件。array.every(function(currentValue,index,arr), thisValue)","createTime":"2019-05-09 10:05:17","floor":4,"id":8634,"isMainBar":true,"pid":8634,"threadId":2966,"tid":2966,"title":"JavaScript Array对象的常用方法","type":"post"},{"barName":"骁","content":"3.entries函数（ES6）：返回一个数组的可迭代对象。","createTime":"2019-05-09 10:04:05","floor":3,"id":8633,"isMainBar":true,"pid":8633,"threadId":2966,"tid":2966,"title":"JavaScript Array对象的常用方法","type":"post"},{"barName":"骁","content":"2.copyWithin函数（ES6）：从数组的指定位置拷贝元素到数组的另一个指定位置中。array.copyWithin(target, start, end)","createTime":"2019-05-09 10:02:58","floor":2,"id":8632,"isMainBar":true,"pid":8632,"threadId":2966,"tid":2966,"title":"JavaScript Array对象的常用方法","type":"post"},{"barName":"骁","content":"1.concat函数：连接多个数组，返回一个新的数组","createTime":"2019-05-09 10:01:12","floor":1,"id":2966,"isMainBar":true,"pid":0,"threadId":2966,"tid":2966,"title":"JavaScript Array对象的常用方法","type":"thread"},{"barName":"骁","content":"创建版本库： git init添加远程仓库： git remote add [name] url...查看提交历史： git log查看git状态： git status添加到暂存区： git add ...提交： git commit -m \"...\"添加到暂存区并提交： git commit -a -m \"...\"提交到远端： git push origin master打标签： git ta","createTime":"2019-05-09 09:41:23","floor":1,"id":2965,"isMainBar":true,"pid":0,"threadId":2965,"tid":2965,"title":"git常用命令","type":"thread"},{"barName":"骁","content":"有些特性是ES2016、2017的，但是我没有分得很清楚","createTime":"2019-05-09 09:38:31","floor":2,"id":8631,"isMainBar":true,"pid":8631,"threadId":2964,"tid":2964,"title":"常用ES6+语法特性","type":"post"},{"barName":"骁","content":"1.let和块级作用域 2.const声明只读常量 3.数组、对象的解构赋值 4.模板字符串、字符的Unicode表示法 5.二进制和八进制表示法 6.指数运算符** 7.Array.from和扩展运算符 8.Symbol：独一无二的值 9.Set和Map数据结构 10.Proxy和Reflect 11.Promise 12.for..of循环和Iterator遍历器 13.yield表达式和as","createTime":"2019-05-09 09:37:20","floor":1,"id":2964,"isMainBar":true,"pid":0,"threadId":2964,"tid":2964,"title":"常用ES6+语法特性","type":"thread"},{"barName":"骁","content":"在没有WebSocket的时候，一般通过轮询和长连接同服务器保持联系。","createTime":"2019-05-07 14:15:47","floor":2,"id":8630,"isMainBar":true,"pid":8630,"threadId":2963,"tid":2963,"title":"WebSocket的作用","type":"post"},{"barName":"骁","content":"HTTP通信只能由客户端发起，而WebSocket提供了服务端主动推送消息到客户端的能力。 当网络中的两个应用程序需要进行全双工通信时使用的就是socket。而WebSocket自然就是建立在web应用程序和服务端之间的全双工通信手段了。骁之屋的消息系统也使用了WebSocket技术。let ws = new WebSocket(\"wss://.......\");\nws.onopen = e =>","createTime":"2019-05-07 14:15:19","floor":1,"id":2963,"isMainBar":true,"pid":0,"threadId":2963,"tid":2963,"title":"WebSocket的作用","type":"thread"},{"barName":"骁","content":"我的理解是Promise体先于Promise后先于Promise then先于setTimeout。","createTime":"2019-05-06 10:50:41","floor":4,"id":8629,"isMainBar":true,"pid":8629,"threadId":2962,"tid":2962,"title":"关于Promise内执行顺序的问题","type":"post"},{"barName":"骁","content":"我的理解是Promise体先于Promise then先于Promise后先于setTimeout。","createTime":"2019-05-06 10:29:33","floor":3,"id":8628,"isMainBar":true,"pid":8628,"threadId":2962,"tid":2962,"title":"关于Promise内执行顺序的问题","type":"post"},{"barName":"骁","content":"答案是2 4 7 5 6 1 3","createTime":"2019-05-06 10:27:44","floor":2,"id":8627,"isMainBar":true,"pid":8627,"threadId":2962,"tid":2962,"title":"关于Promise内执行顺序的问题","type":"post"},{"barName":"骁","content":"有下面一段代码：setTimeout(() => console.log(1));\nnew Promise((resolve) => {\n  console.log(2);\n  setTimeout(() => console.log(3));\n  resolve();\n  console.log(4);\n}).then(() => {\n  console.log(5);\n}).then(() =","createTime":"2019-05-06 10:27:08","floor":1,"id":2962,"isMainBar":true,"pid":0,"threadId":2962,"tid":2962,"title":"关于Promise内执行顺序的问题","type":"thread"},{"barName":"骁","content":"……","createTime":"2019-05-03 20:53:37","floor":1,"id":2961,"isMainBar":true,"pid":0,"threadId":2961,"tid":2961,"title":"向命运发问","type":"thread"}],"pageInfo":{"total":4072,"pageSize":15,"current":37},"total":4072,"totalPages":272}}