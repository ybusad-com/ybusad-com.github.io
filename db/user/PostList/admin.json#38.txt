{"code":0,"msg":"ok","data":{"list":[{"barName":"骁","content":"我梦见，我轻盈自由地腾空……","createTime":"2019-04-26 21:47:16","floor":1,"id":2960,"isMainBar":true,"pid":0,"threadId":2960,"tid":2960,"title":"相信每个人都做过会飞的梦","type":"thread"},{"barName":"骁","content":"参考链接：https://segmentfault.com/a/1190000011145364","createTime":"2019-04-26 11:09:40","floor":11,"id":8626,"isMainBar":true,"pid":8626,"threadId":2959,"tid":2959,"title":"前端跨域解决方案总结","type":"post"},{"barName":"骁","content":"8.通过nginx做代理跨域 对一个域名的请求可以通过nginx映射到另一个域名上。","createTime":"2019-04-26 11:09:32","floor":10,"id":8625,"isMainBar":true,"pid":8625,"threadId":2959,"tid":2959,"title":"前端跨域解决方案总结","type":"post"},{"barName":"骁","content":"7.CORS跨域，老朋友 在服务端设置Access-Control-Allow-Origin后填域名和协议。 如果需要带Cookie，前端需要设置 xhr.withCredentials = true，后端需要加上Access-Control-Allow-Credentials: true。 还需要设置Access-Control-Allow-Headers，一般可填Content-Type,X-","createTime":"2019-04-26 11:09:01","floor":9,"id":8624,"isMainBar":true,"pid":8624,"threadId":2959,"tid":2959,"title":"前端跨域解决方案总结","type":"post"},{"barName":"骁","content":"6.使用HTML5：postMessage跨域 postMessage函数的调用不受到同源策略的影响，监听window的message就可以拿到数据了。","createTime":"2019-04-26 11:05:12","floor":8,"id":8623,"isMainBar":true,"pid":8623,"threadId":2959,"tid":2959,"title":"前端跨域解决方案总结","type":"post"},{"barName":"骁","content":"5.使用window.name存储数据 同一窗口随后加载的网页可以访问到window.name的数据","createTime":"2019-04-26 11:01:58","floor":7,"id":8622,"isMainBar":true,"pid":8622,"threadId":2959,"tid":2959,"title":"前端跨域解决方案总结","type":"post"},{"barName":"骁","content":"4.通过监测hash的变化跨域。 也用于iframe的通信。","createTime":"2019-04-26 10:59:37","floor":6,"id":8621,"isMainBar":true,"pid":8621,"threadId":2959,"tid":2959,"title":"前端跨域解决方案总结","type":"post"},{"barName":"骁","content":"3.document.domain跨域：将document.domain设置为共同的父域名，就可以实现网页和其中的iframe之间的跨域了。 访问父窗口通过window.parent，访问框架内部使用contentWindow。","createTime":"2019-04-26 10:57:57","floor":5,"id":8620,"isMainBar":true,"pid":8620,"threadId":2959,"tid":2959,"title":"前端跨域解决方案总结","type":"post"},{"barName":"骁","content":"2.后端中转跨域。比如建一个node.js后端做中转。把其他域的数据抓过来。","createTime":"2019-04-26 10:55:45","floor":4,"id":8619,"isMainBar":true,"pid":8619,"threadId":2959,"tid":2959,"title":"前端跨域解决方案总结","type":"post"},{"barName":"骁","content":"1.通过jsonp跨域。对面返回的是一个json时，通过jsonp包装即可实现数据的传输。","createTime":"2019-04-26 10:54:58","floor":3,"id":8618,"isMainBar":true,"pid":8618,"threadId":2959,"tid":2959,"title":"前端跨域解决方案总结","type":"post"},{"barName":"骁","content":"为什么要跨域？因为有同源策略限制。 同源策略限制会限制（域名不同、子域不同、端口不同、协议不同）等场景。","createTime":"2019-04-26 10:53:56","floor":2,"id":8617,"isMainBar":true,"pid":8617,"threadId":2959,"tid":2959,"title":"前端跨域解决方案总结","type":"post"},{"barName":"骁","content":"把别人写的文章用自己的理解复述一遍。","createTime":"2019-04-26 10:52:32","floor":1,"id":2959,"isMainBar":true,"pid":0,"threadId":2959,"tid":2959,"title":"前端跨域解决方案总结","type":"thread"},{"barName":"骁","content":"10.养成良好的JS编写习惯。 如：避免无用的循环、避免过量的作用域链查找，减少对象和数组的属性操作。","createTime":"2019-04-16 12:27:15","floor":11,"id":8615,"isMainBar":true,"pid":8615,"threadId":2958,"tid":2958,"title":"前端性能优化方法总结","type":"post"},{"barName":"骁","content":"9.记得配置Gzip压缩 Gzip压缩在压缩脚本等资源包的时候，可以节省大多数体积。浏览器解压缩的速度也远比传输原始数据来得快。","createTime":"2019-04-16 12:24:22","floor":10,"id":8614,"isMainBar":true,"pid":8614,"threadId":2958,"tid":2958,"title":"前端性能优化方法总结","type":"post"},{"barName":"骁","content":"8.图片一定要压缩之后再放到网站上。 将图片裁剪成合适的尺寸，压缩至合适的大小，既节省空间和带宽流量，也加速访问速度。 可以使用CDN来就近分发静态资源。","createTime":"2019-04-16 12:23:02","floor":9,"id":8613,"isMainBar":true,"pid":8613,"threadId":2958,"tid":2958,"title":"前端性能优化方法总结","type":"post"}],"pageInfo":{"total":4072,"pageSize":15,"current":38},"total":4072,"totalPages":272}}